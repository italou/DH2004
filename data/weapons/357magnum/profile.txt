//==============================================================================================================
// 357 Magnum Revolver
//==============================================================================================================

//general item variables
General {

  Name     = 357Magnum;
  Type     = Weapon;
  Useable  = TRUE;

  //multiplayer item category
  MultiplayerCategory = Handguns;

  Helper = @357;
  Model  = Data\Weapons\Common\Models\357Magnum.j3d;

  AnimFolder = Data\Weapons\357Magnum\Anim;


  Preloads = Data\Weapons\Common\Sounds\DryShotRevolver.wav,
             Data\Weapons\Common\Models\JetLoader.j3d,
             Data\Weapons\Common\Sounds\Hammer.wav,
             Data\Weapons\Common\Sounds\Lock.wav,
             Data\Weapons\Common\Sounds\OpenRevolver.wav,
             Data\Weapons\Common\Sounds\CloseRevolver.wav,
             Data\Weapons\Common\Sounds\InsertBullets.wav,
             Data\Weapons\Common\Sounds\ThrowBullets.wav,
             Data\Weapons\Common\Sounds\DryShotRevolver.wav,
             Data\Weapons\Common\ShootFX\MiniSmoke.par;

  //minimum time between two uses of this item, in seconds
  UseLatency = 0.5;

  //how is the field-of-view when aiming this item
  AimFOV = 45;

  //shot many seconds to start/stop aiming this item
  AimSecs = 0.8;

  //right handed item
  RightHanded = TRUE;

  //adjust arms when aiming item variables
  AdjustWhenAimingBothArmsAmount = 0.88;
  AdjustWhenAimingRightArmAmount = 0.55;
  AdjustWhenAimingLeftArmAmount  = 1;

  //shake strengh
  ShakeStrength = 9;

  //add the items icons
  Icons = Data\Weapons\Common\Icons\357_glow.tex,
          Data\Weapons\Common\Icons\357.tex;

  MorphFilename[AIM]    = Data\Hunters\Common\Anim\weapon_aim.mtg;
  MorphFilename[SHOOT]  = Data\Hunters\Common\Anim\weapon_shoot.mtg;
  MorphFilename[RELOAD] = Data\Hunters\Common\Anim\reload.mtg;
}

//weapon variables
Weapon {

  //spread angle (will be added to the ammunition spread angle)
  SpreadAngle  = 0.03;

  //max bullets  
  MaxLoad = 6;

  //skins with minimal weapon bonus to use
  Skins = Data\Weapons\Common\Models\Tex\357mag[dif1].tex = 0   65,
          Data\Weapons\Common\Models\Tex\357mag[dif2].tex = 0   65,
          Data\Weapons\Common\Models\Tex\357mag[difg].tex = 50   85;

  //skins icons
  SkinIcons = Data\Weapons\Common\Icons\m_chrome.tex,
              Data\Weapons\Common\Icons\m_black.tex,
              Data\Weapons\Common\Icons\m_gold.tex;

  //not using detail and camo texture
  UseDetailTexture = TRUE;
  UseCamoTexture   = FALSE;

  //weapon weight [1..3]
  Weight = 1;
}

//called when user wants to fire
ISL[USE] {

    PlayBones(shoot.skl, 30);

    IfNotVarGoto(CURRENT_BULLETS, DRY_SHOT);

    PlaySyncJ3D(dog, 0, 1, TRUE);
    PlaySound(Data\Weapons\Common\Sounds\Hammer.wav, 0.95, 1.05);

    WaitBonesFrame(1);
    PlaySound(SOUND_SHOOT, 0.9, 1.1);
    LinkObject(Data\Weapons\Common\ShootFX\MiniSmoke.par, @smoke, , FALSE, FALSE);
    Event(FIRE);
    Event(USE_BULLET);

    //WaitBonesFrame(7);
    //PlaySyncJ3D(dog, 7, 8);

    WaitBonesFrame(8);
    EndScript();

  DRY_SHOT:

    PlaySound(Data\Weapons\Common\Sounds\DryShotRevolver.wav, 0.95, 1.05);
    Event(DRY_FIRE);

    PlaySyncJ3D(dog, 0, 1, TRUE);
    PlaySound(Data\Weapons\Common\Sounds\Hammer.wav, 0.95, 1.05);
    WaitBonesFrame(1);

    EndScript();
}

//called when reloading the weapon
ISL[RELOAD] {

    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, FULL_OF_BULLETS);

    PlayBones(reload.skl, 30);

    //link bullets
    LinkObject(MODEL_BULLET, @bullet1, , TRUE);
    LinkObject(MODEL_BULLET, @bullet2, , TRUE);
    LinkObject(MODEL_BULLET, @bullet3, , TRUE);
    LinkObject(MODEL_BULLET, @bullet4, , TRUE);
    LinkObject(MODEL_BULLET, @bullet5, , TRUE);
    LinkObject(MODEL_BULLET, @bullet6, , TRUE);

    WaitBonesFrame(10);
    PlaySyncJ3D(lock_open, 10, 15);
    PlaySound(Data\Weapons\Common\Sounds\Lock.wav, 0.95, 1.05);

    WaitBonesFrame(15);
    PlaySyncJ3D(tambor_open, 15, 25);
    PlaySound(Data\Weapons\Common\Sounds\OpenRevolver.wav, 0.95, 1.05);

    //remove bullets
    WaitBonesFrame(36);
    PlaySound(Data\Weapons\Common\Sounds\ThrowBullets.wav, 0.95, 1.05);
    
    //unlink bullets
    WaitBonesFrame(40);
    UnlinkObject(MODEL_BULLET, TRUE);
    Event(NO_BULLETS);

    //eject used bullets
    WaitBonesFrame(10);
    EjectObject(MODEL_BULLET_EJECT, @bullet1, @bullet1, 5, 0.5, 30, 1.4);
    Decrease(MAX_BULLETS);
    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, UNUSED_BULLET_2);
    EjectObject(MODEL_BULLET_EJECT, @bullet2, @bullet2, 5, 0.5, 30, 1.4);
    Decrease(MAX_BULLETS);
    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, UNUSED_BULLET_3);
    EjectObject(MODEL_BULLET_EJECT, @bullet3, @bullet3, 5, 0.5, 30, 1.4);
    Decrease(MAX_BULLETS);
    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, UNUSED_BULLET_4);
    EjectObject(MODEL_BULLET_EJECT, @bullet4, @bullet4, 5, 0.5, 30, 1.4);
    Decrease(MAX_BULLETS);
    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, UNUSED_BULLET_5);
    EjectObject(MODEL_BULLET_EJECT, @bullet5, @bullet5, 5, 0.5, 30, 1.4);
    Decrease(MAX_BULLETS);
    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, UNUSED_BULLET_6);
    EjectObject(MODEL_BULLET_EJECT, @bullet6, @bullet6, 5, 0.5, 30, 1.4);
    Goto(UNUSED_BULLET_NONE);

    //link unused bullets
  UNUSED_BULLET_2:
    Decrease(CURRENT_BULLETS);
    EjectObject(MODEL_BULLET, @bullet2, @bullet2, 5, 0.5, 30, 1.4);
  UNUSED_BULLET_3:
    Decrease(CURRENT_BULLETS);
    EjectObject(MODEL_BULLET, @bullet3, @bullet3, 5, 0.5, 30, 1.4);
  UNUSED_BULLET_4:
    Decrease(CURRENT_BULLETS);
    EjectObject(MODEL_BULLET, @bullet4, @bullet4, 5, 0.5, 30, 1.4);
  UNUSED_BULLET_5:
    Decrease(CURRENT_BULLETS);
    EjectObject(MODEL_BULLET, @bullet5, @bullet5, 5, 0.5, 30, 1.4);
  UNUSED_BULLET_6:
    Decrease(CURRENT_BULLETS);
    EjectObject(MODEL_BULLET, @bullet6, @bullet6, 5, 0.5, 30, 1.4);
  UNUSED_BULLET_NONE:

    //get jet loader
    WaitBonesFrame(48);
    LinkObject(Data\Weapons\Common\Models\JetLoader.j3d, @weapon,  , TRUE);
    LinkObject(MODEL_BULLET, @jetbullet1, , TRUE);
    LinkObject(MODEL_BULLET, @jetbullet2, , TRUE);
    LinkObject(MODEL_BULLET, @jetbullet3, , TRUE);
    LinkObject(MODEL_BULLET, @jetbullet4, , TRUE);
    LinkObject(MODEL_BULLET, @jetbullet5, , TRUE);
    LinkObject(MODEL_BULLET, @jetbullet6, , TRUE);

    //put the bullets
    WaitBonesFrame(63);
    PlaySound(Data\Weapons\Common\Sounds\InsertBullets.wav, 0.95, 1.05);
    UnlinkObject(MODEL_BULLET, TRUE);
    LinkObject(MODEL_BULLET, @bullet1, , TRUE);
    LinkObject(MODEL_BULLET, @bullet2, , TRUE);
    LinkObject(MODEL_BULLET, @bullet3, , TRUE);
    LinkObject(MODEL_BULLET, @bullet4, , TRUE);
    LinkObject(MODEL_BULLET, @bullet5, , TRUE);
    LinkObject(MODEL_BULLET, @bullet6, , TRUE);

    //drop the jet loader
    WaitBonesFrame(75);
    UnLinkObject(Data\Weapons\Common\Models\JetLoader.j3d, TRUE);

    WaitBonesFrame(88);
    PlaySyncJ3D(tambor_close, 88, 100);
    PlaySound(Data\Weapons\Common\Sounds\CloseRevolver.wav, 0.95, 1.05);
    WaitBonesFrame(100);
    PlaySyncJ3D(lock_close, 100, 105);
    PlaySound(Data\Weapons\Common\Sounds\Lock.wav, 0.95, 1.05);

    //unlink bullets
    UnlinkObject(MODEL_BULLET, TRUE);

    WaitBonesFrame(110);
    Event(ALL_BULLETS);

  FULL_OF_BULLETS:

    EndScript();
}


ISL[AIM_IN] {

  //play aim animation sync with the aim fx var
  PlayBones(aim.skl, 30);
  PlaySyncBones(AIM_FX);

  WaitBonesFrame(13);
  PlaySyncJ3D(dog, 12, 15);
  PlaySound(Data\Weapons\Common\Sounds\Lock.wav, 0.95, 1.05);

  WaitBonesFrame(41);
  EndScript();
}

ISL[AIM_OUT] {

  //play aim animation sync with the aim fx var
  PlayBones(aim.skl, 30);
  PlaySyncBones(AIM_FX);

  WaitBonesFrame(15, TRUE);
  PlaySyncJ3D(dog, 12, 15);
  PlaySound(Data\Weapons\Common\Sounds\Lock.wav, 0.95, 1.05);

  WaitBonesFrame(0, TRUE);
  EndScript();
}

ISL[AIM_START] {

  //set last frame
  PlayBones(aim.skl, 30);
  SetBonesFrame(30);
  SetJ3DFrame(dog, 1);
  EndScript();
}

ISL[AIM_END] {

  //set last frame
  PlayBones(aim.skl, 30);
  SetBonesFrame(0);
  SetJ3DFrame(dog, 0);
  EndScript();
}
