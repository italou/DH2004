//==============================================================================================================
// Bolt Rifle
//==============================================================================================================

//general item variables
General {

  Name     = BoltRifle;
  Type     = Weapon;
  Useable  = TRUE;

  //multiplayer item category
  MultiplayerCategory = Rifles;

  Helper = @Weapon;
  Model  = Data\Weapons\Common\Models\BoltRifle.j3d;

  AnimFolder = Data\Weapons\BoltRifle\Anim;

  Preloads = Data\Weapons\Common\Sounds\DryShot.wav,
             Data\Weapons\Common\Sounds\BoltOpen.wav,
             Data\Weapons\Common\Sounds\BoltClose.wav,
             Data\Weapons\Common\Sounds\InsertBullet.wav,
             Data\Weapons\Common\Models\Support.j3d,
             Data\Weapons\Common\ShootFX\RifleSmoke.par;

  //minimum time between two uses of this item, in seconds
  UseLatency = 0.5;

  //how is the field-of-view when aiming this item
  AimFOV = 45;

  //shot many seconds to start/stop aiming this item
  AimSecs = 0.75;

  //adjust arms when aiming item variables
  AdjustWhenAimingBothArmsAmount = 0.88;
  AdjustWhenAimingRightArmAmount = 0.55;
  AdjustWhenAimingLeftArmAmount  = 1;

  //shake strengh
  ShakeStrength = 12;

  //scope class for compatible scopes/items
  ScopeClass = RifleScope;

  //add the items icons
  Icons = Data\Weapons\Common\Icons\BoltRifle_glow.tex,
          Data\Weapons\Common\Icons\BoltRifle.tex,
          Data\Weapons\Common\Icons\BoltRifle_scope_glow.tex,
          Data\Weapons\Common\Icons\BoltRifle_scope.tex,
          Data\Weapons\Common\Icons\BoltRifle_thermal_glow.tex,
          Data\Weapons\Common\Icons\BoltRifle_thermal.tex;

  MorphFilename[AIM]    = Data\Hunters\Common\Anim\weapon_aim.mtg;
  MorphFilename[SHOOT]  = Data\Hunters\Common\Anim\weapon_shoot.mtg;
  MorphFilename[RELOAD] = Data\Hunters\Common\Anim\reload.mtg;
}

//weapon variables
Weapon {

  //spread angle (will be added to the ammunition spread angle)
  SpreadAngle  = 0.01;

  //max bullets  
  MaxLoad = 5;

  //scope support helper for this weapon 
  ScopeHelper = @scope;

  //scope support for this weapon 
  ScopeSupport = Data\Weapons\Common\Models\Support.j3d;

  //skins with minimal weapon bonus to use and glossiness to be applied
  Skins = Data\Weapons\Common\Models\Tex\magbolt[dif1].tex = 0   80,
          Data\Weapons\Common\Models\Tex\magbolt[dif2].tex = 0   50,
          Data\Weapons\Common\Models\Tex\magbolt[dif3].tex = 0   50,
          Data\Weapons\Common\Models\Tex\magbolt[difg].tex = 100 95;
//50 100

  //skins icons
  SkinIcons = Data\Weapons\Common\Icons\m_steel2.tex,
              Data\Weapons\Common\Icons\m_black.tex,
              Data\Weapons\Common\Icons\m_brass.tex,
              Data\Weapons\Common\Icons\m_gold.tex;
  
  //using detail and camo texture
  UseDetailTexture = TRUE;
  UseCamoTexture   = TRUE;

  //weapon weight [1..3]
  Weight = 2;
}

//called when user wants to fire
ISL[USE] {

    IfNotVarGoto(CURRENT_BULLETS, DRY_SHOT);

    PlayBones(shoot.skl, 30);

    LinkObject(Data\Weapons\Common\ShootFX\RifleSmoke.par, @smoke, , FALSE, FALSE);
    PlaySound(SOUND_SHOOT);

    Event(FIRE);
    Event(USE_BULLET);

    WaitBonesFrame(23);
    PlaySyncJ3D(open, 23, 35);
    PlaySound(Data\Weapons\Common\Sounds\BoltOpen.wav);

    //eject bullet
    WaitBonesFrame(32);
    EjectObject(MODEL_BULLET_EJECT, bullet_bolt, bullet_bolt, 20, 0.5, 30, 1.4);

    WaitBonesFrame(35);
    PlaySyncJ3D(open, 35, 48, TRUE);
    PlaySound(Data\Weapons\Common\Sounds\BoltClose.wav);

    WaitBonesFrame(59);
    EndScript();

  DRY_SHOT:

    PlaySound(Data\Weapons\Common\Sounds\DryShot.wav);
    Event(DRY_FIRE);
    EndScript();
}

//called when reloading the weapon
ISL[RELOAD] {

    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, FULL_OF_BULLETS);

    PlayBones(reload.skl, 30);

    WaitBonesFrame(20);
    PlaySyncJ3D(open, 20, 32);
    PlaySound(Data\Weapons\Common\Sounds\BoltOpen.wav);

    //wait for bullet loop
    WaitBonesFrame(40);

  REPLAY_BULLET:

    //get the bullet
    LinkObject(MODEL_BULLET, @bullet, , TRUE);

    WaitBonesFrame(53);
    UnlinkObject(MODEL_BULLET, TRUE);
    Event(NEW_BULLET);
    PlaySound(Data\Weapons\Common\Sounds\InsertBullet.wav);
    WaitBonesFrame(65);

    Increase(CURRENT_BULLETS);
    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, CLOSE_WEAPON);

    SetBonesFrame(40);
    Goto(REPLAY_BULLET);

  CLOSE_WEAPON:

    WaitBonesFrame(72);
    PlaySyncJ3D(open, 72, 83, TRUE);
    PlaySound(Data\Weapons\Common\Sounds\BoltClose.wav);
    WaitBonesFrame(94);

  FULL_OF_BULLETS:

    EndScript();
}
