//==============================================================================================================
// Single Shot Pistol
//==============================================================================================================

//general item variables
General {

  Name     = SingleShotPistol;
  Type     = Weapon;
  Useable  = TRUE;

  //multiplayer item category
  MultiplayerCategory = Handguns;

  Helper = @357;
  Model  = Data\Weapons\Common\Models\SingleShotPistol.j3d;

  AnimFolder = Data\Weapons\SingleShotPistol\Anim;


  Preloads = Data\Weapons\Common\Sounds\DryShot.wav,
             Data\Weapons\Common\Sounds\CloseRevolver.wav,
             Data\Weapons\Common\Sounds\InsertBullet.wav,
             Data\Weapons\Common\ShootFX\RifleSmoke.par;

  //minimum time between two uses of this item, in seconds $$$
  UseLatency = 0.5;

  //how is the field-of-view when aiming this item 
  AimFOV = 45;

  //shot many seconds to start/stop aiming this item  $$$
  AimSecs = 0.8;

  //scope class for compatible scopes/items
  ScopeClass = RifleScope;

  //right handed item
  RightHanded = TRUE;

  //adjust arms when aiming item variables  $$$
  AdjustWhenAimingBothArmsAmount = 0.88;
  AdjustWhenAimingRightArmAmount = 0.55;
  AdjustWhenAimingLeftArmAmount  = 1;

  //shake strengh
  ShakeStrength = 15;

  //add the items icons <smrever>
  Icons = Data\Weapons\Common\Icons\SingleShotPistol_glow.tex,
          Data\Weapons\Common\Icons\SingleShotPistol.tex,
          Data\Weapons\Common\Icons\SingleShotPistol_scope_glow.tex,
          Data\Weapons\Common\Icons\SingleShotPistol_scope.tex,
          Data\Weapons\Common\Icons\SingleShotPistol_thermal_glow.tex,
          Data\Weapons\Common\Icons\SingleShotPistol_thermal.tex;

  MorphFilename[AIM]    = Data\Hunters\Common\Anim\weapon_aim.mtg;
  MorphFilename[SHOOT]  = Data\Hunters\Common\Anim\weapon_shoot.mtg;
  MorphFilename[RELOAD] = Data\Hunters\Common\Anim\reload.mtg;
}

//weapon variables
Weapon {

  //spread angle (will be added to the ammunition spread angle)   $$$
  SpreadAngle  = 0.03;

  //max bullets  
  MaxLoad = 1;

  //scope support helper for this weapon 
  ScopeHelper = @scope;

  //scope support for this weapon 
  ScopeSupport = Data\Weapons\Common\Models\Support.j3d;

  //skins with minimal weapon bonus to use 
  Skins = Data\Weapons\Common\Models\Tex\sspistol[dif].tex =  0   50,
          Data\Weapons\Common\Models\Tex\sspistol[dif2].tex = 0   60,
          Data\Weapons\Common\Models\Tex\sspistol[difg].tex = 70  90;

  //skins icons
  SkinIcons = Data\Weapons\Common\Icons\m_silver.tex,
              Data\Weapons\Common\Icons\m_black.tex,
              Data\Weapons\Common\Icons\m_gold.tex;

  //not using detail and camo texture
  UseDetailTexture = FALSE;
  UseCamoTexture   = FALSE;

  //weapon weight [1..3]
  Weight = 1;
}

//called when user wants to fire
ISL[USE] {

    IfNotVarGoto(CURRENT_BULLETS, DRY_SHOT);

    PlayBones(shoot.skl, 30);
    PlaySound(SOUND_SHOOT, 0.9, 1.1);

    WaitBonesFrame(1);
    LinkObject(Data\Weapons\Common\ShootFX\RifleSmoke.par, @smoke, , FALSE, FALSE);
    
    Event(FIRE);
    Event(USE_BULLET);

    WaitBonesFrame(20);
    EndScript();

  DRY_SHOT:

    PlaySound(Data\Weapons\Common\Sounds\DryShot.wav, 0.95, 1.05);
    Event(DRY_FIRE);

    EndScript();
}

//called when reloading the weapon
ISL[RELOAD] {

    IfVarsEqualGoto(CURRENT_BULLETS, MAX_BULLETS, FULL_OF_BULLETS);

    PlayBones(reload.skl, 30);

    //link used bullet to the weapon
    LinkObject(MODEL_BULLET_EJECT, @bullet_single, , TRUE);
   
    //open action
    WaitBonesFrame(23);
    PlaySound(Data\Weapons\Common\Sounds\CloseRevolver.wav);
    PlaySyncJ3D(open, 23, 31);

    //eject bullet, get bullet
    WaitBonesFrame(42);
    EjectObject(MODEL_BULLET_EJECT, @bullet_single_ej, @bullet_single_target, 20, 0.5, 30, 1.4);
    UnlinkObject(MODEL_BULLET, TRUE);

    WaitbonesFrame(43);
    LinkObject(MODEL_BULLET, @sspbullet, , TRUE);   

    //insert bullet
    WaitBonesFrame(58);
    UnlinkObject(MODEL_BULLET, TRUE);
    LinkObject(MODEL_BULLET, @bullet_single, , TRUE);
    PlaySound(Data\Weapons\Common\Sounds\InsertBullet.wav);
    Event(NEW_BULLET);
    Increase(CURRENT_BULLETS);

    //close trigger stuff
    WaitBonesFrame(67);
    PlaySound(Data\Weapons\Common\Sounds\CloseRevolver.wav);
    PlaySyncJ3D(open, 67, 76, TRUE);

    WaitBonesFrame(100);
  FULL_OF_BULLETS:

    EndScript();
}

